image:
  repository: ghcr.io/immich-app/immich-server
  tag: v2.0.1@sha256:8286638680f0a38a7cb380be64ed77d1d1cfe6d0e0b843f64bff92b24289078d
  pullPolicy: IfNotPresent

mlImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v2.0.1@sha256:45626a33361ef7ed361de41b0d2dc19e5949442cdf0a8eb64b157dc8a04e9855
  pullPolicy: IfNotPresent

mlCudaImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v2.0.1-cuda@sha256:6a6da15fc6eb0e1e48f7153088609d6a2681ef6eb61c58b12332cae9d5cfaade
  pullPolicy: IfNotPresent

mlOpenvinoImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v2.0.1-openvino@sha256:1a5a49530275ee49553b8135646631c64b62e7d22614004db8f765013761b0ba
  pullPolicy: IfNotPresent

mlRocmImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v2.0.1-rocm@sha256:2c35929c1fc64620bd0e01c9738ebc80f7a785d5915a39588d21c8f5176c2779
  pullPolicy: IfNotPresent

securityContext:
  container:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0

immich:
  enable_ml: true
  mlImageType: mlImage
  log_level: log

service:
  main:
    # Main service targets the server
    targetSelector: main
    ports:
      main:
        port: 10323
        protocol: http
        targetSelector: main
  microservices:
    enabled: true
    type: ClusterIP
    targetSelector: microservices
    ports:
      microservices:
        enabled: true
        primary: true
        port: 10004
        protocol: http
        targetSelector: microservices
  machinelearning:
    enabled: true
    type: ClusterIP
    targetSelector: machinelearning
    ports:
      machinelearning:
        enabled: true
        primary: true
        port: 10003
        protocol: http
        targetSelector: machinelearning

persistence:
  mlcache:
    enabled: true
    type: emptyDir
    targetSelector:
      machinelearning:
        machinelearning:
          mountPath: /mlcache
  microcache:
    enabled: true
    type: emptyDir
    targetSelector:
      microservices:
        microservices:
          mountPath: /microcache
  library:
    enabled: true
    mountPath: /usr/src/app/upload/library
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  uploads:
    enabled: true
    mountPath: /usr/src/app/upload/upload
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  backups:
    enabled: true
    mountPath: /usr/src/app/upload/backups
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  thumbs:
    enabled: true
    mountPath: /usr/src/app/upload/thumbs
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  profile:
    enabled: true
    mountPath: /usr/src/app/upload/profile
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  video:
    enabled: true
    mountPath: /usr/src/app/upload/encoded-video
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}

cnpg:
  main:
    enabled: true
    user: immich
    database: immich
    type: vectors
    cluster:
      initdb:
        postInitApplicationSQL:
          - CREATE EXTENSION IF NOT EXISTS cube;
          - CREATE EXTENSION IF NOT EXISTS earthdistance;
          - CREATE SCHEMA IF NOT EXISTS vectors;
          - ALTER DATABASE immich SET search_path TO "immich", public, vectors;
          - SET search_path TO "immich", public, vectors;
          - GRANT SELECT ON TABLE pg_vector_index_stat TO PUBLIC;
          - ALTER SCHEMA vectors OWNER TO immich;

redis:
  enabled: true
  redisUsername: default

ingress:
  main:
    integrations:
      homepage:
        widget:
          version: 2
