image:
  repository: ghcr.io/immich-app/immich-server
  tag: v1.143.0@sha256:6676551f3beb41bf8d25dd5b72ad9837249182571c1b60791ea1acd30d450621
  pullPolicy: IfNotPresent

mlImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v1.143.0@sha256:2bbf70037b99bf67ffab3f836101653370dcc2284165ce958ec33ffa97cd2214
  pullPolicy: IfNotPresent

mlCudaImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v1.143.0-cuda@sha256:f0c81a12d47a3b97b540bc27fa15a3beac546054cb51dfa255cd187f59817c09
  pullPolicy: IfNotPresent

mlOpenvinoImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v1.143.0-openvino@sha256:1afd2513292e2266408610695d30bc3fac5ead3a19472cc65b8ce5fece8e408d
  pullPolicy: IfNotPresent

mlRocmImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v1.143.0-rocm@sha256:aa3f0fe5474a7171d3e1423f2b65978b137605adfd58c264d0cf5632ebc0f6e5
  pullPolicy: IfNotPresent

securityContext:
  container:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0

immich:
  enable_ml: true
  mlImageType: mlImage
  log_level: log

service:
  main:
    # Main service targets the server
    targetSelector: main
    ports:
      main:
        port: 10323
        protocol: http
        targetSelector: main
  microservices:
    enabled: true
    type: ClusterIP
    targetSelector: microservices
    ports:
      microservices:
        enabled: true
        primary: true
        port: 10004
        protocol: http
        targetSelector: microservices
  machinelearning:
    enabled: true
    type: ClusterIP
    targetSelector: machinelearning
    ports:
      machinelearning:
        enabled: true
        primary: true
        port: 10003
        protocol: http
        targetSelector: machinelearning

persistence:
  mlcache:
    enabled: true
    type: emptyDir
    targetSelector:
      machinelearning:
        machinelearning:
          mountPath: /mlcache
  microcache:
    enabled: true
    type: emptyDir
    targetSelector:
      microservices:
        microservices:
          mountPath: /microcache
  library:
    enabled: true
    mountPath: /usr/src/app/upload/library
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  uploads:
    enabled: true
    mountPath: /usr/src/app/upload/upload
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  backups:
    enabled: true
    mountPath: /usr/src/app/upload/backups
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  thumbs:
    enabled: true
    mountPath: /usr/src/app/upload/thumbs
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  profile:
    enabled: true
    mountPath: /usr/src/app/upload/profile
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  video:
    enabled: true
    mountPath: /usr/src/app/upload/encoded-video
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}

cnpg:
  main:
    enabled: true
    user: immich
    database: immich
    type: vectors
    cluster:
      initdb:
        postInitApplicationSQL:
          - CREATE EXTENSION IF NOT EXISTS cube;
          - CREATE EXTENSION IF NOT EXISTS earthdistance;
          - CREATE SCHEMA IF NOT EXISTS vectors;
          - ALTER DATABASE immich SET search_path TO "immich", public, vectors;
          - SET search_path TO "immich", public, vectors;
          - GRANT SELECT ON TABLE pg_vector_index_stat TO PUBLIC;
          - ALTER SCHEMA vectors OWNER TO immich;

redis:
  enabled: true
  redisUsername: default

ingress:
  main:
    integrations:
      homepage:
        widget:
          version: 2
